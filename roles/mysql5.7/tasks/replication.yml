---
- name: Ensure replication user exists on master.
  mysql_user:
    name: repl
    host: "{{ mysql_replication_user.host | default('%') }}"
    password: 1234
    priv: "{{ mysql_replication_user.priv | default('*.*:REPLICATION SLAVE,REPLICATION CLIENT') }}"
    state: present
  when:
    - mysql_replication_role == 'master'
    - mysql_replication_user.name is defined
    
  

- name: Check slave replication status.
  mysql_replication:
    mode: getreplica
    login_user: "{{ mysql_root_username }}"
    login_password: "{{ mysql_new_root_password }}"
  register: slave
  when:
    - mysql_replication_role == 'slave'
  notify: Restart mysql
    
  

- name: Check master replication status.
  mysql_replication: 
    mode: getprimary
    login_user: "{{ mysql_root_username }}"
    login_password: "{{ mysql_new_root_password }}"
  delegate_to: 34.101.100.223
  register: master
  when:
    - mysql_replication_role == 'slave'
    
  

- name: Configure replication on the slave.
  mysql_replication:
    mode: changeprimary
    login_user: "{{ mysql_root_username }}"
    login_password: "{{ mysql_new_root_password }}"
    master_host: 34.101.100.223
    master_user: 'repl'
    master_password: 1234
    master_log_file: "{{ master.File }}"
    master_log_pos: "{{ master.Position }}"
  when:
    - mysql_replication_role == 'slave'
    

- name: Start replication.
  mysql_replication: 
    mode: startreplica
    login_user: "{{ mysql_root_username }}"
    login_password: "{{ mysql_new_root_password }}"
  when:
    - mysql_replication_role == 'slave'
    
  
